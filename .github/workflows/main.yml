name: CI for WebHelp Contribution

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      zowe-version:
        description: "Specify the Zowe verison (vX.X.X)"
        required: false
      release:
        description: "Create a release with the artifact"
        default: false
        required: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository) && !contains(github.event.head_commit.message, '[ci skip]')

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js LTS
      uses: actions/setup-node@v2
      with:
        node-version: lts/*

    - name: Setup .npmrc
      id: setup-npmrc
      run: npm config set @zowe:registry=https://zowe.jfrog.io/zowe/api/npm/npm-local-release/

    - name: Install Node Package Dependencies
      id: install-node
      run: | 
        npm i --prod
        npm install -g puppeteer-cli

    - name: Install PIP Dependencies
      id: install-pip
      if: ${{ github.event.inputs.zowe-version && github.event.inputs.zowe-version != '' }}
      run: pip3 install yq

    - name: Set up Zowe from Versions
      id: get-version-from-workflow
      if: ${{ github.event.inputs.zowe-version && github.event.inputs.zowe-version != '' }}
      run: |
        curl -s https://raw.githubusercontent.com/zowe/zowe-cli-standalone-package/${{ github.event.inputs.zowe-version }}/master/zowe-versions.yaml > __zowe__version__
        npm install -g @zowe/cli@$(yq '.packages.cli."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/cics-for-zowe-cli@$(yq '.packages."cics-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/db2-for-zowe-cli@$(yq '.packages."db2-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/ims-for-zowe-cli@$(yq '.packages."ims-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/mq-for-zowe-cli@$(yq '.packages."mq-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/secure-credential-store-for-zowe-cli@$(yq '.packages."secure-credential-store-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        zowe plugins install @zowe/zos-ftp-for-zowe-cli@$(yq '.packages."zos-ftp-for-zowe-cli"."zowe-v1-lts"' __zowe__version__ | tr -d '"')
        rm __zowe__version__

    - name: Set Up Zowe
      id: setup-zowe
      if: ${{ steps.get-version-from-workflow.outcome == 'skipped' }}
      run: |
        npm install -g @zowe/cli@zowe-v1-lts
        zowe plugins install @zowe/cics-for-zowe-cli@zowe-v1-lts
        zowe plugins install @zowe/db2-for-zowe-cli@zowe-v1-lts
        zowe plugins install @zowe/ims-for-zowe-cli@zowe-v1-lts
        zowe plugins install @zowe/mq-for-zowe-cli@zowe-v1-lts
        zowe plugins install @zowe/secure-credential-store-for-zowe-cli@zowe-v1-lts
        zowe plugins install @zowe/zos-ftp-for-zowe-cli@zowe-v1-lts
    
    - name: Get Zowe version
      id: get-version
      if: ${{ steps.get-version-from-workflow.outcome == 'skipped' }}
      run: echo "::set-output name=number::$(echo 'CLI_v'$(npx zowe --version))"

    - name: Build Web Help
      id: build
      run: |
        which zowe || true
        zowe --version || true
        npm run build:local -- ${{ github.event.inputs.zowe-version || steps.get-version.outputs.number }}
        export margin="0.4in"
        puppeteer print ./generatedWebHelp/docs/all.html ./zowe.pdf --margin-top $margin --margin-right $margin --margin-bottom $margin --margin-left $margin --no-sandbox 

    - name: Archive Results
      id: upload
      if: ${{ always() && steps.build.outcome == 'success' }}
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          generatedWebHelp/
          zowe.pdf
    
    - name: Create Release
      id: release-create
      if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/zowe-v1-lts') && steps.build.outcome == 'success' && github.event_name == 'workflow_dispatch' && github.event.inputs.zowe-version && github.event.inputs.zowe-version != '' && github.event.inputs.release == 'true' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.event.inputs.zowe-version }}
        tag_name: ${{ github.event.inputs.zowe-version }}
        body: |
          Zowe CLI Web-Help for Zowe Release ${{ github.event.inputs.zowe-version }}
    
    - name: Prepare Release Artifacts
      id: release-prepare
      if: ${{ steps.release-create.outcome == 'success' }}
      run: |
        mv "generatedWebHelp" "zowe-${{ github.event.inputs.zowe-version }}-WebHelp"
        mv "zowe.pdf" "zowe-${{ github.event.inputs.zowe-version }}.pdf"
        zip -r "zowe-${{ github.event.inputs.zowe-version }}-WebHelp.zip" "zowe-${{ github.event.inputs.zowe-version }}-WebHelp"

    - name: Upload Release Artifacts - PDF
      id: release-upload-pdf
      if: ${{ steps.release-prepare.outcome == 'success' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release-create.outputs.upload_url }}
        asset_path: ./zowe-${{ github.event.inputs.zowe-version }}.pdf
        asset_name: zowe-${{ github.event.inputs.zowe-version }}.pdf
        asset_content_type: application/pdf
    
    - name: Upload Release Artifacts - ZIP
      id: release-upload-zip
      if: ${{ steps.release-prepare.outcome == 'success' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release-create.outputs.upload_url }}
        asset_path: ./zowe-${{ github.event.inputs.zowe-version }}-WebHelp.zip
        asset_name: zowe-${{ github.event.inputs.zowe-version }}-WebHelp.zip
        asset_content_type: application/zip
